Index: src/Aufgabe_3/TCPEmpfängerBroadcast.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Aufgabe_3;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.PrintWriter;\r\nimport java.net.*;\r\n\r\npublic class TCPEmpfängerBroadcast {\r\n    private static final String BROADCAST = \"192.168.178.255\";\r\n    private static final int BROADCASTPORT = 8888;\r\n    private static final int BUFSIZE = 29;\r\n    private static int TCPPORT = 9998;\r\n\r\n\r\n    public void start() {\r\n        try (ServerSocket serverSocket = new ServerSocket(TCPPORT)) {\r\n            System.out.println(\"TCP Server auf \" + serverSocket.getLocalSocketAddress() + \" gestartet ...\");\r\n            while (true) {\r\n                connect(serverSocket);\r\n            }\r\n        } catch (IOException e) {\r\n            System.err.println(e);\r\n        }\r\n    }\r\n\r\n    private void connect(ServerSocket server) {\r\n        SocketAddress socketAddress = null;\r\n        try (Socket socket = server.accept();\r\n             BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()))){\r\n            socketAddress = socket.getRemoteSocketAddress();\r\n            System.out.println(\"Verbindung zu \" + socketAddress + \" aufgebaut\");\r\n\r\n\r\n            String input;\r\n            while ((input = in.readLine()) != null) {\r\n                    System.out.println(\"Message von: \" + socketAddress + \">>\" + input);\r\n                }\r\n\r\n\r\n\r\n\r\n        } catch (IOException e) {\r\n            System.err.println(e);\r\n        } finally {\r\n            System.out.println(\"Verbindung zu \" + socketAddress + \" abgebaut\");\r\n        }\r\n    }\r\n\r\n\r\n    private static void broadcastMessages(String data){\r\n        try (DatagramSocket socket = new DatagramSocket()) {\r\n            socket.setBroadcast(true);\r\n            InetAddress iaddr = InetAddress.getByName(BROADCAST);\r\n            DatagramPacket packetOut = new DatagramPacket(new byte[BUFSIZE], BUFSIZE);\r\n            packetOut.setData(data.getBytes());\r\n            packetOut.setAddress(iaddr);\r\n            packetOut.setPort(BROADCASTPORT);\r\n            socket.send(packetOut);\r\n\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n            System.err.println(\"Message konnte nicht gebroadcastet werden\");\r\n        }\r\n    }\r\n    public static void main(String[] args) {\r\n        new TCPEmpfängerBroadcast().start();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Aufgabe_3/TCPEmpfängerBroadcast.java	(revision 1761f40616fe95ed8e096db8d4f26570bda61ed0)
+++ src/Aufgabe_3/TCPEmpfängerBroadcast.java	(date 1595188965996)
@@ -4,7 +4,9 @@
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.io.PrintWriter;
-import java.net.*;
+import java.net.ServerSocket;
+import java.net.Socket;
+import java.net.SocketAddress;
 
 public class TCPEmpfängerBroadcast {
     private static final String BROADCAST = "192.168.178.255";
@@ -48,21 +50,8 @@
     }
 
 
-    private static void broadcastMessages(String data){
-        try (DatagramSocket socket = new DatagramSocket()) {
-            socket.setBroadcast(true);
-            InetAddress iaddr = InetAddress.getByName(BROADCAST);
-            DatagramPacket packetOut = new DatagramPacket(new byte[BUFSIZE], BUFSIZE);
-            packetOut.setData(data.getBytes());
-            packetOut.setAddress(iaddr);
-            packetOut.setPort(BROADCASTPORT);
-            socket.send(packetOut);
+    private static void broadcastMessages(){
 
-
-        } catch (IOException e) {
-            e.printStackTrace();
-            System.err.println("Message konnte nicht gebroadcastet werden");
-        }
     }
     public static void main(String[] args) {
         new TCPEmpfängerBroadcast().start();
